INSERT INTO definitions VALUES ("Bug", "in computer technology, a bug is a coding error in a computer program.");
INSERT INTO definitions VALUES ("Acceptance testing", "formal testing with respect to user needs, requirements, and business processes conducted to determine whether or not a system satisfies the acceptance criteria and to enable the user, customers or other authorized entity to determine whether or not to accept the system.");
INSERT INTO definitions VALUES ("Accuracy", "the capability of the software product to provide the right or agreed results or effects with the needed degree of precision.");
INSERT INTO definitions VALUES ("Adaptability", "the capability of the software product to be adapted for different specified environments without applying actions or means other than those provided for this purpose for the software considered.");
INSERT INTO definitionsVALUES ("Analytical testing", "testing based on a systematic analysis of e.g., product risks or requirements.");
INSERT INTO definitions VALUES ("Analyzability", "the capability of the software product to be diagnosed for deficiencies or causes of failures in the software, or for the parts to be modified to be identified.");
INSERT INTO definitions VALUES ("Anti-pattern", "repeated action, process, structure or reusable solution that initially appears to be beneficial and is commonly used but is ineffective and/or counterproductive in practice.");
INSERT INTO definitions VALUES ("Atomic condition", "a condition that cannot be decomposed, i.e., a condition that does not contain two or more single conditions joined by a logical operator (AND, OR, XOR).");
INSERT INTO definitions VALUES ("Attractiveness", "the capability of the software product to be attractive to the user.");
INSERT INTO definitions VALUES ("Availability", "the degree to which a component or system is operational and accessible when required for use. Often expressed as a percentage.");
INSERT INTO definitions VALUES ("Black-box testing", "testing, either functional or non-functional, without reference to the internal structure of the component or system.");
INSERT INTO definitions VALUES ("Branch", "a basic block that can be selected for execution based on a program construct in which one of two or more alternative program paths is available, e.g., case, jump, go to, if-then-else. ");
INSERT INTO definitions VALUES ("Branch coverage", "the percentage of branches that have been exercised by a test suite. 100% branch coverage implies both 100% decision coverage and 100% statement coverage.");
INSERT INTO definitions VALUES ("Buffer", "a device or storage area used to store data temporarily for differences in rates of data flow, time or occurrence of events, or amounts of data that can be handled by the devices or processes involved in the transfer or use of the data. ");
INSERT INTO definitions VALUES ("Buffer overflow", "a memory access failure due to the attempt by a process to store data beyond the boundaries of a fixed length buffer, resulting in overwriting of adjacent memory areas or the raising of an overflow exception.");
INSERT INTO definitions VALUES ("Call graph", "an abstract representation of calling relationships between subroutines in a program.");
INSERT INTO definitions VALUES ("Capture tool", "a type of test execution tool where inputs are recorded during manual testing in order to generate automated test scripts that can be executed later (i.e. replayed). These tools are often used to support automated regression testing.");
INSERT INTO definitions VALUES ("Playback tool", "a type of test execution tool where inputs are recorded during manual testing in order to generate automated test scripts that can be executed later (i.e. replayed). These tools are often used to support automated regression testing.");
INSERT INTO definitions VALUES ("Record tool", " a type of test execution tool where inputs are recorded during manual testing in order to generate automated test scripts that can be executed later (i.e. replayed). These tools are often used to support automated regression testing.");
INSERT INTO definitions VALUES ("Certification", "the process of confirming that a component, system or person complies with its specified requirements, e.g., by passing an exam.");
INSERT INTO definitions VALUES ("Changeability", "the capability of the software product to enable specified modifications to be implemented.");
INSERT INTO definitions VALUES ("Co-existence", "the capability of the software product to co-exist with other independent software in a common environment sharing common resources.");
INSERT INTO definitions VALUES ("Code", "computer instructions and data definitions expressed in a programming language or in a form output by an assembler, compiler or other translator.");
INSERT INTO definitions VALUES ("Combinatorial testing", "a black-box test design technique in which test cases are designed to execute specific combinations of values of several parameters.");
INSERT INTO definitions VALUES ("Commercial off-the-shelf","a software product that is developed for the general market, i.e. for a large number of customers, and that is delivered to many customers in identical format.");
INSERT INTO definitions VALUES ("COTS", "a software product that is developed for the general market, i.e. for a large number of customers, and that is delivered to many customers in identical format.");
INSERT INTO definitions VALUES ("Off-the-shelf software","a software product that is developed for the general market, i.e. for a large number of customers, and that is delivered to many customers in identical format.");
INSERT INTO definitions VALUES ("Complexity", "the degree to which a component or system has a design and/or internal structure that is difficult to understand, maintain and verify.");
INSERT INTO definitions VALUES ("Compliance", "the capability of the software product to adhere to standards, conventions or regulations in laws and similar prescriptions. ");
INSERT INTO definitions VALUES ("Component", "a minimal software item that can be tested in isolation.");
INSERT INTO definitions VALUES ("Component integration testing ", "testing performed to expose defects in the interfaces and interaction between integrated components.");
INSERT INTO definitions VALUES ("Link testing", "testing performed to expose defects in the interfaces and interaction between integrated components.");
INSERT INTO definitions VALUES ("Component testing", "the testing of individual software components. ");
INSERT INTO definitions VALUES ("Condition", " a logical expression that can be evaluated as True or False, e.g., A>B.");
INSERT INTO definitions VALUES ("Branch condition", "a logical expression that can be evaluated as True or False, e.g., A>B.");
INSERT INTO definitions VALUES ("Condition coverage", "the percentage of condition outcomes that have been exercised by a test suite. 100% condition coverage requires each single condition in every decision statement to be tested as True and False.");
INSERT INTO definitions VALUES ("Condition testing", "a white-box test design technique in which test cases are designed to execute condition outcomes.");
INSERT INTO definitions VALUES ("Configuration", "the composition of a component or system as defened by the number, nature, and interconnections of its constituent parts.");
INSERT INTO definitions VALUES ("Configuration management", "a discipline applying technical and administrative direction and surveillance to identify and document the functional and physical characteristics of a configuration item, control changes to those characteristics, record and report change processing and implementation status, and verify compliance with specified requirements.");
INSERT INTO definitions VALUES ("Configuration management tool", "a tool that provides support for the identification and control of configuration items, their status over changes and versions, and the release of baselines consisting of configuration items.");
INSERT INTO definitions VALUES ("Control flow", "a sequence of events (paths) in the execution through a component or system.");
INSERT INTO definitions VALUES ("Control flow analysis", " a form of static analysis based on a representation of unique paths (sequences of events) in the execution through a component or system. Control flow analysis evaluates the integrity of control flow structures, looking for possible control ?ow anomalies such as closed loops or logically unreachable process steps.");
INSERT INTO definitions VALUES ("Control flow graph", " an abstract representation of all possible sequences of events (paths) in the execution through a component or system.");
INSERT INTO definitions VALUES ("Control flow testing", "an approach to structure-based testing in which test cases are designed to execute specific sequences of events. Various techniques exist for control flow testing, e.g., decision testing, condition testing, and path testing, that each have their specific approach and level of control low coverage.");
INSERT INTO definitions VALUES ("Coverage", " the degree, expressed as a percentage, to which a specified coverage item has been exercised by a test suite.");
INSERT INTO definitions VALUES ("Cyclomatic complexity", " the maximum number of linear, independent paths through a program. Cyclomatic complexity may be computed as L = N + 2P, where L = the number of edges/links in a graph, N = the number of nodes in a graph, P = the number of disconnected parts of the graph (e.g., a called graph or subroutine).");
INSERT INTO definitions VALUES ("Data flow", "an abstract representation of the sequence and possible changes of the state of data objects, where the state of an object is any of creation, usage, or destruction.");
INSERT INTO definitions VALUES ("Data flow analysis", "a form of static analysis based on the definition and usage of variables.");
INSERT INTO definitions VALUES ("Data flow testing", "a white-box test design technique in which test cases are designed to execute definition-use pairs of variables.");
INSERT INTO definitions VALUES ("Data-driven testing", "a scripting technique that stores test input and expected results in a table or spreadsheet, so that a single control script can execute all of the tests in the table. Data-driven testing is often used to support the application of test execution tools such as capture/playback tools.");
INSERT INTO definitions VALUES ("Debugging tool","a tool used by programmers to reproduce failures, investigate the state of programs and find the corresponding defect. Debuggers enable programmers to execute programs step by step, to halt a program at any program statement and to set and examine program variables.");
INSERT INTO definitions VALUES ("Decision", "a program point at which the control flow has two or more alternative routes. A node with two or more links to separate branches.");
INSERT INTO definitions VALUES ("Decision condition coverage", "the percentage of all condition outcomes and decision outcomes that have been exercised by a test suite. 100% decision condition coverage implies both 100% condition coverage and 100% decision coverage.");
INSERT INTO definitions VALUES ("Decision condition testing", "a white-box test design technique in which test cases are designed to execute condition outcomes and decision outcomes.");
INSERT INTO definitions VALUES ("Decision coverage", "the percentage of decision outcomes that have been exercised by a test suite. 100% decision coverage implies both 100% branch coverage and 100% statement coverage.");
INSERT INTO definitions VALUES ("Decision outcome", "the result of a decision (which therefore determines the branches to be taken).");
INSERT INTO definitions VALUES ("Decision testing", "a white-box test design technique in which test cases are designed to execute decision outcomes.");
INSERT INTO definitions VALUES ("Defect","a flaw in a component or system that can cause the component or system to fail to perform its required function, e.g., an incorrect statement or data definition. A defect, if encountered during execution, may cause a failure of the component or system.");
INSERT INTO definitions VALUES ("Defect management", "the process of recognizing, investigating, taking action and disposing of defects. It involves recording defects, classifying them and identifying the impact.");
INSERT INTO definitions VALUES ("Defect management tool", "a tool that facilitates the recording and status tracking of defects and changes. They often have work-flow-oriented facilities to track and control the allocation, correction and re-testing of defects and provide reporting facilities.");
INSERT INTO definitions VALUES ("Defect report", "a document reporting on any flaw in a component or system that can cause the component or system to fail to perform its required function.");
INSERT INTO definitions VALUES ("Definition-use pair", "the association of a definition of a variable with the subsequent use of that variable. Variable uses include computational (e.g., multiplication) or to direct the execution of a path (predicate use).");
INSERT INTO definitions VALUES ("Domain", "the set from which valid input and/or output values can be selected.");
INSERT INTO definitions VALUES ("Driver", "a software component or test tool that replaces a component that takes care of the control and/or the calling of a component or system.");
INSERT INTO definitions VALUES ("Dynamic analysis", "the process of evaluating behavior, e.g., memory performance, CPU usage, of a system or component during execution.");
INSERT INTO definitions VALUES ("Dynamic analysis tool", " a tool that provides run-time information on the state of the software code. These tools are most commonly used to identify unassigned pointers, check pointer arithmetic and to monitor the allocation, use and de-allocation of memory and to flag memory leaks.");
INSERT INTO definitions VALUES ("Dynamic testing", "testing that involves the execution of the software of a component or system.");
INSERT INTO definitions VALUES ("Efficiency"," (1)the capability of the software product to provide appropriate performance, relative to the amount of resources used, under stated conditions. (2) The capability of a process to produce the intended outcome, relative to the amount of resources used.");
INSERT INTO definitions VALUES ("Entry point", " an executable statement or process step which defines a point at which a given process is intended to begin.");
INSERT INTO definitions VALUES ("Exercised"," a program element is said to be exercised by a test case when the input value causes the execution of that element, such as a statement, decision, or other structural element.");
INSERT INTO definitions VALUES ("Error", "a human action that produces an incorrect result.");
INSERT INTO definitions VALUES ("Exit criteria", "the set of generic and specific conditions, agreed upon with the stakeholders for permitting a process to be officially completed. The purpose of exit criteria is to prevent a task from being considered completed when there are still outstanding parts of the task which have not been finished. Exit criteria are used to report against and to plan when to stop testing.");
INSERT INTO definitions VALUES ("Expected result", "the behavior predicted by the specification, or another source, of the component or system under specified conditions.");
INSERT INTO definitions VALUES ("Fail", "a test is deemed to fail if its actual result does not match its expected result.");
INSERT INTO definitions VALUES ("Failover testing", "testing by simulating failure modes or actually causing failures in a controlled environment. Following a failure, the failover mechanism is tested to ensure that data is not lost or corrupted and that any agreed service levels are maintained (e.g., function availability or response times).");
INSERT INTO definitions VALUES ("Failure", "deviation of the component or system from its expected delivery, service or result.");
INSERT INTO definitions VALUES ("Failure mode", "the physical or functional manifestation of a failure. For example, a system in failure mode may be characterized by slow operation, incorrect outputs, or complete termination of execution.");
INSERT INTO definitions VALUES ("Fault attack", "directed and focused attempt to evaluate the quality, especially reliability, of a test object by attempting to force specific failures to occur.");
INSERT INTO definitions VALUES ("Fault injection", "the process of intentionally adding defects to a system for the purpose of finding out whether the system can detect, and possibly recover from, a defect. Fault injection is intended to mimic failures that might occur in the field.");
INSERT INTO definitions VALUES ("Fault seeding", "the process of intentionally adding defects to those already in the component or system for the purpose of monitoring the rate of detection and removal, and estimating the number of remaining defects. Fault seeding is typically part of development (pre-release) testing and can be performed at any test level (component, integration, or system).");
INSERT INTO definitions VALUES ("Fault seeding tool", "a tool for seeding (i.e., intentionally inserting) faults in a component or system.");
INSERT INTO definitions VALUES ("Fault tolerance", "the capability of the software product to maintain a specified level of performance in cases of software faults (defects) or of infringement of its specified interface.");
INSERT INTO definitions VALUES ("Feature", "an attribute of a component or system specified or implied by requirements documentation (for example reliability, usability or design constraints).");
INSERT INTO definitions VALUES ("Finite state machine","a computational model consisting of a finite number of states and transitions between those states, possibly with accompanying actions.");
INSERT INTO definitions VALUES ("Formal review", "a review characterized by documented procedures and requirements, e.g., inspection.");
INSERT INTO definitions VALUES ("Functional integration", "an integration approach that combines the components or systems for the purpose of getting a basic functionality working early.");
INSERT INTO definitions VALUES ("Functional testing ", "testing based on an analysis of the specification of the functionality of a component or system.");
INSERT INTO definitions VALUES ("Functionality", "the capability of the software product to provide functions which meet stated and implied needs when the software is used under specified conditions.");
INSERT INTO definitions VALUES ("Functionality testing","the process of testing to determine the functionality of a software product.");
INSERT INTO definitions VALUES ("Hyperlink"," a pointer within a web page that leads to other web pages.");
INSERT INTO definitions VALUES ("Hyperlink test tool", "a tool used to check that no broken hyperlinks are present on a web site.");
INSERT INTO definitions VALUES ("Incident", "any event occurring that requires investigation.");
INSERT INTO definitions VALUES ("Indicator" , "a measure that can be used to estimate or predict another measure.");
INSERT INTO definitions VALUES ("Input", "a variable (whether stored within a component or outside) that is read by a component.");
INSERT INTO definitions VALUES ("Input value", "an instance of an input.");
INSERT INTO definitions VALUES ("Inspection", "a type of peer review that relies on visual examination of documents to detect defects, e.g., violations of development standards and non-conformance to higher level documentation. The most formal review technique and therefore always based on a documented procedure.");
INSERT INTO definitions VALUES ("Installability", "the capability of the software product to be installed in a specified environment.");
INSERT INTO definitions VALUES ("Installability testing", "testing the installability of a software product.");
INSERT INTO definitions VALUES ("Installation wizard","supplied software on any suitable media, which leads the installer through the installation process. It normally runs the installation process, provides feedback on installation results, and prompts for options.");
INSERT INTO definitions VALUES ("Integration", "the process of combining components or systems into larger assemblies.");
INSERT INTO definitions VALUES ("Integration testing" , "testing performed to expose defects in the interfaces and in the interactions between integrated components or systems.");
INSERT INTO definitions VALUES ("Interoperability", "the capability of the software product to interact with one or more specified components or systems.");
INSERT INTO definitions VALUES ("Interoperability testing", "testing to determine the interoperability of a software product.");
INSERT INTO definitions VALUES ("Keyword-driven testing", "a scripting technique that uses data files to contain not only test data and expected results, but also keywords related to the application being tested. The keywords are interpreted by special supporting scripts that are called by the control script for the test.");
INSERT INTO definitions VALUES ("Learnability", "the capability of the software product to enable the user to learn its application.");
INSERT INTO definitions VALUES ("Level test plan", " a test plan that typically addresses one test level.");
INSERT INTO definitions VALUES ("Load profile", "a specification of the activity which a component or system being tested may experience in production. A load profile consists of a designated number of virtual users who process a defined set of transactions in a specified time period and according to a predefined operational profile.");
INSERT INTO definitions VALUES ("Load testing", "a type of performance testing conducted to evaluate the behavior of a component or system with increasing load, e.g., numbers of parallel users and/or numbers of transactions, to determine what load can be handled by the component or system.");
INSERT INTO definitions VALUES ("Maintainability", "the ease with which a software product can be modified to correct defects, modified to meet new requirements, modified to make future maintenance easier, or adapted to a changed environment.");
INSERT INTO definitions VALUES ("Maintainability testing", "testing to determine the maintainability of a software product.");
INSERT INTO definitions VALUES ("Maintenance testing", "testing the changes to an operational system or the impact of a changed environment to an operational system.");
INSERT INTO definitions VALUES ("Man-in-the-middle attack", "the interception, mimicking and/or altering and subsequent relaying of communications (e.g., credit card transactions) by a third party such that a user remains unaware of that third party's presence.");
INSERT INTO definitions VALUES ("Master test plan", "a test plan that typically addresses multiple test levels.");
INSERT INTO definitions VALUES ("Maturity", " the capability of an organization with respect to the effectiveness and efficiency of its processes and work practices. (2) The capability of the software product to avoid failure as a result of defects in the software.");
INSERT INTO definitions VALUES ("Measure", "the number or category assigned to an attribute of an entity by making a measurement.");
INSERT INTO definitions VALUES ("Measurement", "the process of assigning a number or category to an entity to describe an attribute of that entity.");
INSERT INTO definitions VALUES ("Memory leak"," a memory access failure due to a defect in a program's dynamic store allocation logic that causes it to fail to release memory after it has finished using it, eventually causing the program and/or other concurrent processes to fail due to lack of memory.");
INSERT INTO definitions VALUES ("Metric", "a measurement scale and the method used for measurement.");
INSERT INTO definitions VALUES ("Model-based testing", "testing based on or involving models.");
INSERT INTO definitions VALUES ("Modified condition", "the percentage of all single condition outcomes that independently affect a decision outcome that have been exercised by a test case suite. 100% modified condition decision coverage implies 100% decision condition coverage.");
INSERT INTO definitions VALUES ("Modified condition", " a white-box test design technique in which test cases are designed to execute single condition outcomes that independently affect a decision outcome.");
INSERT INTO definitions VALUES ("Monitoring tool", "a software tool or hardware device that runs concurrently with the component or system under test and supervises, records and/or analyses the behavior of the component or system.");
INSERT INTO definitions VALUES ("Multiple condition coverage", "the percentage of combinations of all single condition outcomes within one statement that have been exercised by a test suite. 100% multiple condition coverage implies 100% modified condition decision coverage.");
INSERT INTO definitions VALUES ("Multiple condition testing", " a white-box test design technique in which test cases are designed to execute combinations of single condition outcomes (within one statement).");
INSERT INTO definitions VALUES ("Negative testing", "tests aimed at showing that a component or system does not work. Negative testing is related to the tester's attitude rather than a specific test approach or test design technique, e.g., testing with invalid input values or exceptions.");
INSERT INTO definitions VALUES ("Neighborhood integration testing", " a form of integration testing where all of the nodes that connect to a given node are the basis for the integration testing.");
INSERT INTO definitions VALUES ("Non-functional requirement", " a requirement that does not relate to functionality, but to attributes such as reliability, efficiency, usability, maintainability and portability.");
INSERT INTO definitions VALUES ("Non-functional testing", " testing the attributes of a component or system that do not relate to functionality, e.g., reliability, efficiency, usability, maintainability and portability.");
INSERT INTO definitions VALUES ("Operational profile", " the representation of a distinct set of tasks performed by the component or system, possibly based on user behavior when interacting with the component or system, and their probabilities of occurrence. A task is logical rather that physical and can be executed over several machines or be executed in non-contiguous time segments.");
INSERT INTO definitions VALUES ("Output", " a variable (whether stored within a component or outside) that is written by a component.");
INSERT INTO definitions VALUES ("Pairwise integration testing", " a form of integration testing that targets pairs of components that work together, as shown in a call graph.");
INSERT INTO definitions VALUES ("Pairwise testing", "a black-box test design technique in which test cases are designed to execute all possible discrete combinations of each pair of input parameters.");
INSERT INTO definitions VALUES ("Pass", "a test is deemed to pass if its actual result matches its expected result.");
INSERT INTO definitions VALUES ("Path", "a sequence of events, e.g., executable statements, of a component or system from an entry point to an exit point.");
INSERT INTO definitions VALUES ("Path testing", "a white-box test design technique in which test cases are designed to execute paths.");
INSERT INTO definitions VALUES ("Performance", "the degree to which a system or component accomplishes its designated functions within given constraints regarding processing time and throughput rate.");
INSERT INTO definitions VALUES ("Performance testing tool", "a tool to support performance testing that usually has two main facilities: load generation and test transaction measurement. Load generation can simulate either multiple users or high volumes of input data. During execution, response time measurements are taken from selected transactions and these are logged. Performance testing tools normally provide reports based on test logs and graphs of load against response times.");
INSERT INTO definitions VALUES ("Pointer", "a data item that specifies the location of another data item. For example, a data item that specifies the address of the next employee record to be processed.");
INSERT INTO definitions VALUES ("Portability",  "the ease with which the software product can be transferred from one hardware or software environment to another.");
INSERT INTO definitions VALUES ("Portability testing", "testing to determine the portability of a software product.");
INSERT INTO definitions VALUES ("Precondition", "environmental and state conditions that must be fulfilled before the component or system can be executed with a particular test or test procedure.");
INSERT INTO definitions VALUES ("Predicate", " a statement that can evaluate to true or false and may be used to determine the control flow of subsequent decision logic.");
INSERT INTO definitions VALUES ("Process", " a set of interrelated activities, which transform inputs into outputs.");
INSERT INTO definitions VALUES ("Product risk", "a risk directly related to the test object.");
INSERT INTO definitions VALUES ("Project", "a project is a unique set of coordinated and controlled activities with start and finish dates undertaken to achieve an objective conforming to specific requirements, including the constraints of time, cost and resources.");
INSERT INTO definitions VALUES ("Pseudo-random", "a series which appears to be random but is in fact generated according to some prearranged sequence.");
INSERT INTO definitions VALUES ("Quality", "the degree to which a component, system or process meets specified requirements and/or user/customer needs and expectations.");
INSERT INTO definitions VALUES ("Quality assurance", "part of quality management focused on providing confidence that quality requirements will be fulfilled.");
INSERT INTO definitions VALUES ("Quality attribute","a feature or characteristic that affects an item's quality.");
INSERT INTO definitions VALUES ("Recoverability", "the capability of the software product to re-establish a specified level of performance and recover the data directly affected in case of failure.");
INSERT INTO definitions VALUES ("Recoverability testing","testing to determine the recoverability of a software product.");
INSERT INTO definitions VALUES ("Reliability growth model", "a model that shows the growth in reliability over time during continuous testing of a component or system as a result of the removal of defects that result in reliability failures.");
INSERT INTO definitions VALUES ("Reliability testing", " testing to determine the reliability of a software product.");
INSERT INTO definitions VALUES ("Replaceability", "the capability of the software product to be used in place of another specified software product for the same purpose in the same environment.");
INSERT INTO definitions VALUES ("Requirement" , "a condition or capability needed by a user to solve a problem or achieve an objective that must be met or possessed by a system or system component to satisfy a contract, standard, specification, or other formally imposed document.");
INSERT INTO definitions VALUES ("Resource utilization testing", "the process of testing to determine the resource-utilization of a software product.");
INSERT INTO definitions VALUES ("Result", "the consequence/outcome of the execution of a test. It includes outputs to screens, changes to data, reports, and communication messages sent out.");
INSERT INTO definitions VALUES ("Review", "an evaluation of a product or project status to ascertain discrepancies from planned results and to recommend improvements. Examples include management review, informal review, technical review, inspection, and walkthrough.");
INSERT INTO definitions VALUES ("Risk", "a factor that could result in future negative consequences.");
INSERT INTO definitions VALUES ("Risk analysis", "the process of assessing identified project or product risks to determine their level of risk, typically by estimating their impact and probability of occurrence (likelihood).");
INSERT INTO definitions VALUES ("Risk assessment", "the process of identifying and subsequently analyzing the identified project or product risk to determine its level of risk, typically by assigning likelihood and impact ratings.");
INSERT INTO definitions VALUES ("Risk identification", "the process of identifying risks using techniques such as brainstorming, checklists and failure history.");
INSERT INTO definitions VALUES ("Risk level", " the importance of a risk as defined by its characteristics impact and likelihood. The level of risk can be used to determine the intensity of testing to be performed. A risk level can be expressed either qualitatively (e.g., high, medium, low) or quantitatively.");
INSERT INTO definitions VALUES ("Risk mitigation", "the process through which decisions are reached and protective measures are implemented for reducing risks to, or maintaining risks within, specified levels.");
INSERT INTO definitions VALUES ("Risk-based testing", "an approach to testing to reduce the level of product risks and inform stakeholders of their status, starting in the initial stages of a project. It involves the identifcation of product risks and the use of risk levels to guide the test process.");
INSERT INTO definitions VALUES ("Robustness", "the degree to which a component or system can function correctly in the presence of invalid inputs or stressful environmental conditions.");
INSERT INTO definitions VALUES ("Safety", " the capability of the software product to achieve acceptable levels of risk of harm to people, business, software, property or the environment in a specified context of use.");
INSERT INTO definitions VALUES ("Scalability", "the capability of the software product to be upgraded to accommodate increased loads.");
INSERT INTO definitions VALUES ("Scalability testing", "testing to determine the scalability of the software product");
INSERT INTO definitions VALUES ("Security", "attributes of software products that bear on its ability to prevent unauthorized access, whether accidental or deliberate, to programs and data.");
INSERT INTO definitions VALUES ("Security testing", "testing to determine the security of the software product.");
INSERT INTO definitions VALUES ("Security tool", "a tool that supports operational security.");
INSERT INTO definitions VALUES ("Short-circuiting", "a programming language/interpreter technique for evaluating compound conditions in which a condition on one side of a logical operator may not be evaluated if the condition on the other side is sufficient to determine the final outcome.");
INSERT INTO definitions VALUES ("Simulation", "the representation of selected behavioral characteristics of one physical or abstract system by another system.");
INSERT INTO definitions VALUES ("Simulator", "a device, computer program or system used during testing, which behaves or operates like a given system when provided with a set of controlled inputs.");
INSERT INTO definitions VALUES ("Software lifecycle", "the period of time that begins when a software product is conceived and ends when the software is no longer available for use. The software lifecycle typically includes a concept phase, requirements phase, design phase, implementation phase, test phase, installation and checkout phase, operation and maintenance phase, and sometimes, retirement phase. Note these phases may overlap or be performed iteratively.");
INSERT INTO definitions VALUES ("Statement coverage","the percentage of executable statements that have been exercised by a test suite.");
INSERT INTO definitions VALUES ("Statement testing", "a white-box test design technique in which test cases are designed to execute statements.");
INSERT INTO definitions VALUES ("Static analysis", "analysis of software development artifacts, e.g., requirements or code, carried out without execution of these software development artifacts. Static analysis is usually carried out by means of a supporting tool.");
INSERT INTO definitions VALUES ("Static analyzer", "a tool that carries out static analysis.");
INSERT INTO definitions VALUES ("Stress testing", "a type of performance testing conducted to evaluate a system or component at or beyond the limits of its anticipated or specified workloads, or with reduced availability of resources such as access to memory or servers.");
INSERT INTO definitions VALUES ("Stub", "a skeletal or special-purpose implementation of a software component, used to develop or test a component that calls or is otherwise dependent on it. It replaces a called component.");
INSERT INTO definitions VALUES ("Suitability", "the capability of the software product to provide an appropriate set of functions for specified tasks and user objectives.");
INSERT INTO definitions VALUES ("System",  "a collection of components organized to accomplish a specific function or set of functions.");
INSERT INTO definitions VALUES ("System integration testing", "testing the integration of systems and packages; testing interfaces to external organizations (e.g., Electronic Data Interchange, Internet).");
INSERT INTO definitions VALUES ("System testing", "testing an integrated system to verify that it meets specified requirements.");
INSERT INTO definitions VALUES ("System under test", "the component or system to be tested.");
INSERT INTO definitions VALUES ("Technical review", "a peer group discussion activity that focuses on achieving consensus on the technical approach to be taken");
INSERT INTO definitions VALUES ("Test", "a set of one or more test cases.");
INSERT INTO definitions VALUES ("Test approach", "the implementation of the test strategy for a specific project. It typically includes the decisions made that follow based on the (test) project's goal and the risk assessment carried out, starting points regarding the test process, the test design techniques to be applied, exit criteria and test types to be performed.");
INSERT INTO definitions VALUES ("Test automation", "the use of software to perform or support test activities, e.g., test management, test design, test execution and results checking");
INSERT INTO definitions VALUES ("Test case", "a set of input values, execution preconditions, expected results and execution postconditions, developed for a particular objective or test condition, such as to exercise a particular program path or to verify compliance with a specific requirement.");
INSERT INTO definitions VALUES ("Test data", "data that exists (for example, in a database) before a test is executed, and that affects or is affected by the component or system under test.");
INSERT INTO definitions VALUES ("Test design", "the process of transforming general test objectives into tangible test conditions and test cases.");
INSERT INTO definitions VALUES ("Test design technique", "procedure used to derive and/or select test cases.");
INSERT INTO definitions VALUES ("Test environment", "an environment containing hardware, instrumentation, simulators, software tools, and other support elements needed to conduct a test.");
INSERT INTO definitions VALUES ("Test execution", "the process of running a test on the component or system under test, producing actual result(s).");
INSERT INTO definitions VALUES ("Test execution automation", "the use of software, e.g., capture/playback tools, to control the execution of tests, the comparison of actual results to expected results, the setting up of test preconditions, and other test control and reporting functions.");
INSERT INTO definitions VALUES ("Test execution tool", "a type of test tool that is able to execute other software using an automated test script, e.g., capture/playback.");
INSERT INTO definitions VALUES ("Test harness", "a test environment comprised of stubs and drivers needed to execute a test.");
INSERT INTO definitions VALUES ("Test implementation", "the process of developing and prioritizing test procedures, creating test data and, optionally, preparing test harnesses and writing automated test scripts.");
INSERT INTO definitions VALUES ("Test infrastructure", "the organizational artifacts needed to perform testing, consisting of test environments, test tools, ofice environment and procedures.");
INSERT INTO definitions VALUES ("Test input",  "the data received from an external source by the test object during test execution. The external source can be hardware, software or human.");
INSERT INTO definitions VALUES ("Test management", "the planning, estimating, monitoring and control of test activities, typically carried out by a test manager.");
INSERT INTO definitions VALUES ("Test management tool", "a tool that provides support to the test management and control part of a test process. It often has several capabilities, such as testware management, scheduling of tests, the logging of results, progress tracking, incident management and test reporting.");
INSERT INTO definitions VALUES ("Test manager", "the person responsible for project management of testing activities and resources, and evaluation of a test object. The individual who directs, controls, administers, plans and regulates the evaluation of a test object.");
INSERT INTO definitions VALUES ("Test plan", "a document describing the scope, approach, resources and schedule of intended test activities. It identifies amongst others test items, the features to be tested, the testing tasks, who will do each task, degree of tester independence, the test environment, the test design techniques and entry and exit criteria to be used, and the rationale for their choice, and any risks requiring contingency planning. It is a record of the test planning process.");
INSERT INTO definitions VALUES ("Test planning", "the activity of establishing or updating a test plan.");
INSERT INTO definitions VALUES ("Test script", "commonly used to refer to a test procedure specification, especially an automated one.");
INSERT INTO definitions VALUES ("Test session", "an uninterrupted period of time spent in executing tests. In exploratory testing, each test session is focused on a charter, but testers can also explore new opportunities or issues during a session. The tester creates and executes on the fly and records their progress.");
INSERT INTO definitions VALUES ("Test strategy", "a high-level description of the test levels to be performed and the testing within those levels for an organization or programme (one or more projects).");
INSERT INTO definitions VALUES ("Test suite", "a set of several test cases for a component or system under test, where the post condition of one test is often used as the precondition for the next one.");
INSERT INTO definitions VALUES ("test tool", "a software product that supports one or more test activities, such as planning and control, specification, building initial files and data, test execution and test analysis.");
INSERT INTO definitions VALUES ("Testability", "the capability of the software product to enable modified software to be tested.");
INSERT INTO definitions VALUES ("Tester", "a skilled professional who is involved in the testing of a component or system.");
INSERT INTO definitions VALUES ("Testing", "the process consisting of all lifecycle activities, both static and dynamic, concerned with planning, preparation and evaluation of software products and related work products to determine that they satisfy specified requirements, to demonstrate that they are fit for purpose and to detect defects.");
INSERT INTO definitions VALUES ("Traceability", "the ability to identify related items in documentation and software, such as requirements with associated tests");
INSERT INTO definitions VALUES ("Understandability", "the capability of the software product to enable the user to understand whether the software is suitable, and how it can be used for particular tasks and conditions of use.");
INSERT INTO definitions VALUES ("Unreachable code", "code that cannot be reached and therefore is impossible to execute.");
INSERT INTO definitions VALUES ("Usability", "the capability of the software to be understood, learned, used and attractive to the user when used under specified conditions.");
INSERT INTO definitions VALUES ("Usability testing", "testing to determine the extent to which the software product is understood, easy to learn, easy to operate and attractive to the users under specified conditions.");
INSERT INTO definitions VALUES ("User acceptance testing", "acceptance testing carried out by future users in a (simulated) operational environment focusing on user requirements and needs.");
INSERT INTO definitions VALUES ("Variable", "an element of storage in a computer that is accessible by a software program by referring to it by a name.");
INSERT INTO definitions VALUES ("White-box testing", "testing based on an analysis of the internal structure of the component or system.");
INSERT INTO definitions VALUES ("Wild pointer", "a pointer that references a location that is out of scope for that pointer or that does not exist.");
INSERT INTO definitions VALUES ("Software", " computer programs, procedures, and possibly associated documentation and data pertaining to the operation of a computer system.");
INSERT INTO definitions VALUES ("Multidimensional concept", "a multidimensional database supports multiple views of data sets for users who need to analyze the relationships between data categories.");
INSERT INTO definitions VALUES ("Quality of design", "is the quality which the producer or supplier is intending to offer to the customer. When the producer is making the quality of design of the product, he should take into consideration the customer's requirements in order to satisfy them with fitness for use of the product.");
INSERT INTO definitions VALUES ("Quality of conformance", "is the level of the quality of product actually produced and delivered through the production or service process of the organization as per the specifications or design. When the quality of a product entirely conforms to the specification (design), the quality of conformance is deemed excellent.");
INSERT INTO definitions VALUES ("Software development", "is the process of conceiving, specifying, designing, programming, documenting, testing, and bug fixing involved in creating and maintaining applications, frameworks, or other software components. Software development is a process of writing and maintaining the source code, but in a broader sense, it includes all that is involved between the conception of the desired software through to the final manifestation of the software, sometimes in a planned and structured process.");
INSERT INTO definitions VALUES ("Software quality", "means how well software is designed (quality of design), and how well the software conforms to that design (quality of conformance).");
INSERT INTO definitions VALUES ("Fitness for use", "effectiveness of a design, manufacturing method, and support process employed in delivering a good, system, or service that fits a customer's defined purpose, under anticipated or specified operational conditions.");
INSERT INTO definitions VALUES ("Waterfall ", " is a relatively linear sequential design approach for certain areas of engineering design. It tends to be among the less iterative and flexible approaches, as progress flows in largely one direction ("downwards" like a waterfall) through the phases of conception, initiation, analysis, design, construction, testing, deployment and maintenance.");
INSERT INTO definitions VALUES ("Gray-box testing",  "is a combination of white-box testing and black-box testing. The aim of this testing is to search for the defects if any due to improper structure or improper usage of applications.)";
INSERT INTO definitions VALUES ("Development life cycle", "is composed of a number of clearly defined and distinct work phases which are used by systems engineers and systems developers to plan for, design, build, test, and deliver information systems.");
INSERT INTO definitions VALUES ("Development  cycle", "is composed of a number of clearly defined and distinct work phases which are used by systems engineers and systems developers to plan for, design, build, test, and deliver information systems.");
INSERT INTO definitions VALUES ("Fault","a false, wrong step, process or data definition in a software product.");